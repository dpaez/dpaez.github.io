@import url('https://fonts.googleapis.com/css2?family=Heebo:wght@700;900&family=Inter:wght@200;400&display=swap');

/*
! tailwindcss v3.0.8 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after{
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
}

.prose{
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(ol):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)){
  list-style-type: disc;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)){
  font-weight: 900;
}

.prose :where(h2):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)){
  font-weight: 800;
}

.prose :where(h3):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
}

.prose :where(h4):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)){
  font-weight: 700;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before{
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after{
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-links);
}

.prose :where(pre):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before{
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after{
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)){
  vertical-align: baseline;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(img):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)){
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)){
  font-size: 0.9em;
}

.prose :where(li):not(:where([class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)){
  padding-left: 0.375em;
}

.prose > :where(ul > li p):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 1.25em;
}

.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
  padding-left: 0;
}

.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
  padding-right: 0;
}

.prose > :where(:first-child):not(:where([class~="not-prose"] *)){
  margin-top: 0;
}

.prose > :where(:last-child):not(:where([class~="not-prose"] *)){
  margin-bottom: 0;
}

.card{
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  margin-left: 0.5rem;
  padding: 1.5rem;
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
}

@media (min-width: 1024px){
  .card{
    margin: 1rem;
  }
}

.header-normal{
  height: 5rem;
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

.header-max{
  height: 18rem;
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 500ms;
}

@media (min-width: 768px){
  .header-max{
    height: 24rem;
  }
}

@media (min-width: 1024px){
  .header-max{
    height: 32rem;
  }
}

.header-normal .header-normal-logo{
  height: 2rem;
  --tw-translate-x: -7rem;
  transform: var(--tw-transform);
  --tw-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (min-width: 768px){
  .header-normal .header-normal-logo{
    --tw-translate-x: -14rem;
    transform: var(--tw-transform);
  }
}

@media (min-width: 1024px){
  .header-normal .header-normal-logo{
    --tw-translate-x: -24rem;
    transform: var(--tw-transform);
  }
}

.header-normal .header-normal-deka{
  z-index: 0;
  height: 3rem;
  width: 3rem;
  --tw-translate-x: 7rem;
  transform: var(--tw-transform);
  --tw-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (min-width: 768px){
  .header-normal .header-normal-deka{
    --tw-translate-x: 14rem;
    transform: var(--tw-transform);
  }
}

@media (min-width: 1024px){
  .header-normal .header-normal-deka{
    --tw-translate-x: 24rem;
    transform: var(--tw-transform);
  }
}

.header-normal .header-normal-deka > img{
  height: 3rem;
  width: 3rem;
  opacity: 1;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-delay: 100ms;
  transition-duration: 200ms;
}

.header-max .header-max-logo{
  height: 3rem;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

@media (min-width: 768px){
  .header-max .header-max-logo{
    height: 5rem;
  }
}

@media (min-width: 1024px){
  .header-max .header-max-logo{
    height: 6rem;
  }
}

.header-max .header-max-deka{
  margin-left: auto;
  margin-right: auto;
  height: 6rem;
  width: 6rem;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

@media (min-width: 768px){
  .header-max .header-max-deka{
    height: 12rem;
  }

  .header-max .header-max-deka{
    width: 12rem;
  }
}

.header-max .header-max-deka > img{
  height: 6rem;
  width: 6rem;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 100ms;
}

@media (min-width: 768px){
  .header-max .header-max-deka > img{
    height: 12rem;
  }

  .header-max .header-max-deka > img{
    width: 12rem;
  }
}

.title{
  display: none;
}

.card code{
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
}

.card strong{
  font-weight: 400;
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
}

.card > h2{
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  font-family: Heebo, sans-serif;
  font-size: 3rem;
  line-height: 1;
  font-weight: 900;
  letter-spacing: 0.05em;
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
}

.card-content{
  font-family: Inter, sans-serif;
  font-weight: 200;
}

.card-content a{
  letter-spacing: 0.025em;
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
  -webkit-text-decoration-color: #ff6e5f;
          text-decoration-color: #ff6e5f;
  text-decoration-thickness: 2px;
  text-underline-offset: 2px;
}

.card-content a:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(148 184 255 / var(--tw-bg-opacity));
}

.card-content hr{
  margin-left: auto;
  margin-right: auto;
  width: 6rem;
  border-width: 2px;
  border-style: dashed;
  --tw-border-opacity: 1;
  border-color: rgb(255 110 95 / var(--tw-border-opacity));
}

.card-content img{
  border-radius: 0.5rem;
  border-width: 4px;
  --tw-border-opacity: 1;
  border-color: rgb(255 110 95 / var(--tw-border-opacity));
}

.card-content code{
  border-radius: 0.5rem;
  background-color: rgb(32 32 40 / 0.3);
  padding: 0.25rem;
}

.card-content h3{
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  font-family: Heebo, sans-serif;
  font-weight: 700;
  letter-spacing: 0.025em;
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
}

.card-content blockquote{
  font-family: Inter, sans-serif;
  font-style: italic;
  --tw-text-opacity: 1;
  color: rgb(148 184 255 / var(--tw-text-opacity));
}

.card-content ul{
  margin-bottom: 2rem;
}

.card-content ul > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.card-content ul{
  padding-left: 0px;
}

.card-content h3 > * > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.sticky{
  position: -webkit-sticky;
  position: sticky;
}

.top-0{
  top: 0px;
}

.left-0{
  left: 0px;
}

.z-40{
  z-index: 40;
}

.z-20{
  z-index: 20;
}

.z-10{
  z-index: 10;
}

.mx-auto{
  margin-left: auto;
  margin-right: auto;
}

.mb-10{
  margin-bottom: 2.5rem;
}

.-mt-5{
  margin-top: -1.25rem;
}

.mt-20{
  margin-top: 5rem;
}

.mt-8{
  margin-top: 2rem;
}

.mb-0{
  margin-bottom: 0px;
}

.mt-0{
  margin-top: 0px;
}

.flex{
  display: flex;
}

.w-full{
  width: 100%;
}

.w-24{
  width: 6rem;
}

.max-w-screen-2xl{
  max-width: 1536px;
}

.max-w-4xl{
  max-width: 56rem;
}

.flex-1{
  flex: 1 1 0%;
}

@-webkit-keyframes pulse{
  50%{
    opacity: .5;
  }
}

@keyframes pulse{
  50%{
    opacity: .5;
  }
}

.animate-pulse{
  -webkit-animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
          animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.scroll-mt-0{
  scroll-margin-top: 0px;
}

.flex-col{
  flex-direction: column;
}

.items-center{
  align-items: center;
}

.justify-center{
  justify-content: center;
}

.overflow-y-auto{
  overflow-y: auto;
}

.rounded-full{
  border-radius: 9999px;
}

.border-2{
  border-width: 2px;
}

.border{
  border-width: 1px;
}

.border-solid{
  border-style: solid;
}

.border-accent{
  --tw-border-opacity: 1;
  border-color: rgb(255 110 95 / var(--tw-border-opacity));
}

.border-secondary{
  --tw-border-opacity: 1;
  border-color: rgb(148 184 255 / var(--tw-border-opacity));
}

.bg-main{
  --tw-bg-opacity: 1;
  background-color: rgb(63 63 239 / var(--tw-bg-opacity));
}

.bg-accent{
  --tw-bg-opacity: 1;
  background-color: rgb(255 110 95 / var(--tw-bg-opacity));
}

.bg-gradient-to-b{
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-light{
  --tw-gradient-from: #fffbf3;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(255 251 243 / 0));
}

.via-secondary{
  --tw-gradient-stops: var(--tw-gradient-from), #94b8ff, var(--tw-gradient-to, rgb(148 184 255 / 0));
}

.to-accent{
  --tw-gradient-to: #ff6e5f;
}

.bg-clip-text{
  -webkit-background-clip: text;
          background-clip: text;
}

.fill-transparent{
  fill: transparent;
}

.stroke-light{
  stroke: #fffbf3;
}

.py-4{
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-8{
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.font-inter{
  font-family: Inter, sans-serif;
}

.text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-secondary{
  --tw-text-opacity: 1;
  color: rgb(148 184 255 / var(--tw-text-opacity));
}

.text-light{
  --tw-text-opacity: 1;
  color: rgb(255 251 243 / var(--tw-text-opacity));
}

.text-transparent{
  color: transparent;
}

.shadow-sm{
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-light{
  --tw-shadow-color: #fffbf3;
  --tw-shadow: var(--tw-shadow-colored);
}

.shadow-accent\/50{
  --tw-shadow-color: rgb(255 110 95 / 0.5);
  --tw-shadow: var(--tw-shadow-colored);
}

.prose-headings\:uppercase :is(:where(h1, h2, h3, h4, th):not(:where([class~="not-prose"] *))){
  text-transform: uppercase;
}

.prose-ul\:list-outside :is(:where(ul):not(:where([class~="not-prose"] *))){
  list-style-position: outside;
}

.prose-ul\:list-none :is(:where(ul):not(:where([class~="not-prose"] *))){
  list-style-type: none;
}

.prose-ul\:pl-0 :is(:where(ul):not(:where([class~="not-prose"] *))){
  padding-left: 0px;
}

@media (min-width: 640px){
  .sm\:prose-sm{
    font-size: 0.875rem;
    line-height: 1.7142857;
  }

  .sm\:prose-sm :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.1428571em;
    margin-bottom: 1.1428571em;
  }

  .sm\:prose-sm :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2857143em;
    line-height: 1.5555556;
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }

  .sm\:prose-sm :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.1111111em;
  }

  .sm\:prose-sm :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.1428571em;
    margin-top: 0;
    margin-bottom: 0.8em;
    line-height: 1.2;
  }

  .sm\:prose-sm :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.4285714em;
    margin-top: 1.6em;
    margin-bottom: 0.8em;
    line-height: 1.4;
  }

  .sm\:prose-sm :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.2857143em;
    margin-top: 1.5555556em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }

  .sm\:prose-sm :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.4285714em;
    margin-bottom: 0.5714286em;
    line-height: 1.4285714;
  }

  .sm\:prose-sm :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
  }

  .sm\:prose-sm :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
  }

  .sm\:prose-sm :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
  }

  .sm\:prose-sm :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .sm\:prose-sm :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.8571429em;
    line-height: 1.3333333;
    margin-top: 0.6666667em;
  }

  .sm\:prose-sm :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.8571429em;
  }

  .sm\:prose-sm :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .sm\:prose-sm :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8888889em;
  }

  .sm\:prose-sm :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.8571429em;
    line-height: 1.6666667;
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    border-radius: 0.25rem;
    padding-top: 0.6666667em;
    padding-right: 1em;
    padding-bottom: 0.6666667em;
    padding-left: 1em;
  }

  .sm\:prose-sm :where(ol):not(:where([class~="not-prose"] *)){
    padding-left: 1.5714286em;
  }

  .sm\:prose-sm :where(ul):not(:where([class~="not-prose"] *)){
    padding-left: 1.5714286em;
  }

  .sm\:prose-sm :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.2857143em;
    margin-bottom: 0.2857143em;
  }

  .sm\:prose-sm :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4285714em;
  }

  .sm\:prose-sm :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4285714em;
  }

  .sm\:prose-sm > :where(ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.5714286em;
    margin-bottom: 0.5714286em;
  }

  .sm\:prose-sm > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.1428571em;
  }

  .sm\:prose-sm > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.1428571em;
  }

  .sm\:prose-sm > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.1428571em;
  }

  .sm\:prose-sm > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.1428571em;
  }

  .sm\:prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.5714286em;
    margin-bottom: 0.5714286em;
  }

  .sm\:prose-sm :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 2.8571429em;
    margin-bottom: 2.8571429em;
  }

  .sm\:prose-sm :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose-sm :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose-sm :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose-sm :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose-sm :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.8571429em;
    line-height: 1.5;
  }

  .sm\:prose-sm :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 1em;
    padding-bottom: 0.6666667em;
    padding-left: 1em;
  }

  .sm\:prose-sm :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .sm\:prose-sm :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .sm\:prose-sm :where(tbody td):not(:where([class~="not-prose"] *)){
    padding-top: 0.6666667em;
    padding-right: 1em;
    padding-bottom: 0.6666667em;
    padding-left: 1em;
  }

  .sm\:prose-sm :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .sm\:prose-sm :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .sm\:prose-sm > :where(:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .sm\:prose-sm > :where(:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}

@media (min-width: 768px){
  .md\:flex-1{
    flex: 1 1 0%;
  }

  .md\:flex-row{
    flex-direction: row;
  }

  .md\:overflow-hidden{
    overflow: hidden;
  }
}

@media (min-width: 1024px){
  .lg\:prose-xl{
    font-size: 1.25rem;
    line-height: 1.8;
  }

  .lg\:prose-xl :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }

  .lg\:prose-xl :where(blockquote):not(:where([class~="not-prose"] *)){
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1.0666667em;
  }

  .lg\:prose-xl :where(h1):not(:where([class~="not-prose"] *)){
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }

  .lg\:prose-xl :where(h2):not(:where([class~="not-prose"] *)){
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .lg\:prose-xl :where(h3):not(:where([class~="not-prose"] *)){
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }

  .lg\:prose-xl :where(h4):not(:where([class~="not-prose"] *)){
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .lg\:prose-xl :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(figcaption):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }

  .lg\:prose-xl :where(code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(h2 code):not(:where([class~="not-prose"] *)){
    font-size: 0.8611111em;
  }

  .lg\:prose-xl :where(h3 code):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(pre):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-right: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-left: 1.3333333em;
  }

  .lg\:prose-xl :where(ol):not(:where([class~="not-prose"] *)){
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(ul):not(:where([class~="not-prose"] *)){
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }

  .lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4em;
  }

  .lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.4em;
  }

  .lg\:prose-xl > :where(ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }

  .lg\:prose-xl > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.2em;
  }

  .lg\:prose-xl > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(hr):not(:where([class~="not-prose"] *)){
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }

  .lg\:prose-xl :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl :where(table):not(:where([class~="not-prose"] *)){
    font-size: 0.9em;
    line-height: 1.5555556;
  }

  .lg\:prose-xl :where(thead th):not(:where([class~="not-prose"] *)){
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .lg\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .lg\:prose-xl :where(tbody td):not(:where([class~="not-prose"] *)){
    padding-top: 0.8888889em;
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(tbody td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }

  .lg\:prose-xl :where(tbody td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }

  .lg\:prose-xl > :where(:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }

  .lg\:prose-xl > :where(:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
}
